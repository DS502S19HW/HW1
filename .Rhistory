# Read the file
auto = read.csv(file = 'Auto.csv', header = TRUE);
# Remove missing values
auto[auto == '?'] <- NA;
auto = na.omit(auto);
auto$horsepower = as.numeric(as.character(auto$horsepower));
#(a) Perform a simple linear regression
temp = lm(mpg ~ horsepower, data = auto);
summary(temp);
# Comment: TODO
# i Yes
# ii Weak R^2 = 0.2
# iii Positive
# iv Predict mpg associated with a horsepower of 98
predict(temp, data.frame(horsepower = 98), interval = "confidence");
#(a) Read the file
college = read.csv(file = 'College.csv', header = TRUE);
#(b) Give row names
rownames(college) = college[,1];
fix(college);
college = college[,-1];
fix(college);
#(c) i.Summary function
summary(college);
#(c) ii.Pairs function
pairs(college[,1:10]);
#(c) iii.Plot function
boxplot(college$Outstate ~ college$Private, names = c("Public", "Private"),
ylab = "Out-of-state tuition");
#(c) iv.Factor function
Elite = rep("No", nrow(college));
Elite[college$Top10perc > 50] = "Yes";
Elite = as.factor(Elite);
college = data.frame(college, Elite);
summary(college$Elite);
boxplot(college$Outstate ~ college$Elite, names = c("Non-Elite", "Elite"),
ylab = "Out-of-state tuition");
View(college)
View(college)
View(college)
View(college)
View(college)
View(college)
View(college)
View(college)
View(college)
View(college)
View(college)
View(college)
View(college)
View(college)
#(c) ii.Pairs function
pairs(college[,1:10]);
#(c) vi.
pairs(college[,1:19]);
#(c) vi.
pairs(college[,1:19]);
temp = lm(grad.date ~ . , data = college);
summary(temp);
temp = lm(grad.date ~ . , data = college);
temp = lm(Grad.Date ~ . , data = college);
summary(temp);
temp = lm(Grad.Date ~ . , data = college);
temp = lm(Grad.Rate ~ . , data = college);
summary(temp);
# Author: Tianyu Li
# Created on Jan 28th 2019
# Edited on Jan 29th 2019
#
# R script for Homework 1 Question 5(Section 2.4, page 56, question 9)
# The Auto.csv file should be in working direction
setwd('Z:/R_working_directory/DS502HW1');
# Read the file
auto = read.csv(file = 'Auto.csv', header = TRUE);
# Remove missing values
auto[auto == '?'] <- NA;
auto = na.omit(auto);
auto$horsepower = as.numeric(auto$horsepower);
#(f) Predictors that might be useful in predicting mpg
pairs(auto[, 1:7]);
# Author: Tianyu Li
# Created on Jan 28th 2019
# Edited on Jan 29th 2019
#
# R script for Homework 1 Question 5(Section 2.4, page 56, question 9)
# The Auto.csv file should be in working direction
setwd('Z:/R_working_directory/DS502HW1');
# Read the file
auto = read.csv(file = 'Auto.csv', header = TRUE);
# Remove missing values
auto[auto == '?'] <- NA;
auto$horsepower = as.numeric(as.character(auto$horsepower));
#(f) Predictors that might be useful in predicting mpg
pairs(auto[, 1:7]);
boxplot(auto$mpg ~ auto$origin);
#(e) Create some plots
pairs(auto[, 1:7]);
#(f) Predictors that might be useful in predicting mpg
boxplot(auto$mpg ~ auto$origin);
#(e) Create some plots
pairs(auto[, 1:7]);
#(e) Fit linear regression models with interaction effects.
temp2 = lm(mpg ~ . - name + horsepower:weight + horsepower:displacement, data = auto);
summary(temp2);
#(f) Predictors that might be useful in predicting mpg
# From the figures of last question, we found that mpg is postively correlated to year and
# negatively correlated to displacement, horsepower and weight.
boxplot(auto$mpg ~ auto$origin);
View(auto)
boxplot(auto$mpg ~ auto$origin, names = c("America", "Europe". "Japan");
#(f) Predictors that might be useful in predicting mpg
# From the figures of last question, we found that mpg is postively correlated to year and
# negatively correlated to displacement, horsepower and weight.
boxplot(auto$mpg ~ auto$origin, names = c("America", "Europe". "Japan"));
#(f) Predictors that might be useful in predicting mpg
# From the figures of last question, we found that mpg is postively correlated to year and
# negatively correlated to displacement, horsepower and weight.
boxplot(auto$mpg ~ auto$origin, names = c("America", "Europe", "Japan"));
#(f) Predictors that might be useful in predicting mpg
# From the figures of last question, we found that mpg is postively correlated to year and
# negatively correlated to displacement, horsepower and weight.
boxplot(auto$mpg ~ auto$origin, names = c("America", "Europe", "Japan"), ylab = "mpg",
main = "Mpg over Origin");
# Author: Tianyu Li
# Created on Jan 28th 2019
# Edited on Jan 29th 2019
#
# R script for Homework 1 Question 5(Section 2.4, page 56, question 9)
# The Auto.csv file should be in working direction
setwd('Z:/R_working_directory/DS502HW1');
# Read the file
auto = read.csv(file = 'Auto.csv', header = TRUE);
# Remove missing values
auto[auto == '?'] <- NA;
auto = na.omit(auto);
auto$horsepower = as.numeric(as.character(auto$horsepower));
#(a) The last 2 predictors are qualitative, the others are quantative.
#    The "origin" should stands for the continent so it is qualitative.
#(b) Range of each quantitative predictor
sapply(auto[, 1:7], range);
#(c) Mean and standard deviation of each quantitative predictor
sapply(auto[, 1:7], mean);
sapply(auto[, 1:7], sd);
#(d) Remove the 10th through 85th observations.
subAuto = auto[-(10:85),];
sapply(subAuto[, 1:7], range);
sapply(subAuto[, 1:7], mean);
sapply(subAuto[, 1:7], sd);
#(e) Create some plots
pairs(auto[, 1:7]);
# We found that the displacement and weight look postively correlated to the horsepower.
#(f) Predictors that might be useful in predicting mpg
# From the figures of last question, we found that mpg is postively correlated to year and
# negatively correlated to displacement, horsepower and weight.
boxplot(auto$mpg ~ auto$origin, names = c("America", "Europe", "Japan"), ylab = "mpg",
main = "Mpg over Origin");
# We also found that for the origin column, 1 should stands for America, 2 stands for Europe
# and 3 stands for Asia. In general, asian cars is highest on mpg while american cars is lowest.
#(a) Perform a simple linear regression
temp = lm(mpg ~ horsepower, data = auto);
summary(temp);
#(c) Produce diagnostic plots of the least squares regression fit
par(mfrow = c(2, 2))
plot(temp);
#(b) Plot the response and the predictor
par(mfrow=c(1,1));
plot(mpg ~ horsepower, data = auto);
abline(temp, col = 'red');
plot(temp);
#(c) Produce diagnostic plots of the least squares regression fit
par(mfrow = c(2, 2))
plot(temp);
plot(mpg ~ horsepower, data = auto);
source('Z:/R_working_directory/DS502HW1/HW1Q10.R', echo=TRUE)
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto);
summary(temp);
#(d) Produce diagnostic plots of the linear regression fit
par(mfrow=c(2,2));
plot(temp);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto);
summary(temp);
#(d) Produce diagnostic plots of the linear regression fit
par(mfrow=c(2,2));
plot(temp);
View(auto)
summary(temp);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(14),]);
summary(temp);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(327),]);
summary(temp);
#(f) Try a few different transformations of the variables
par(mfrow=c(2,2));
plot(auto$horsepower ~ auto$mpg);
plot(log(auto$horsepower) ~ auto$mpg);
plot(sqrt(auto$horsepower) ~ auto$mpg);
plot((auto$horsepower)^2 ~ auto$mpg);
par(mfrow=c(2,2));
plot(auto$weight ~ auto$mpg);
plot(log(auto$weight) ~ auto$mpg);
plot(sqrt(auto$weight) ~ auto$mpg);
plot((auto$weight)^2 ~ auto$mpg);
cor(auto$weight, auto$mpg)
cor(c(auto$weight, log(auto$weight)) log(auto$weight), auto$mpg)
cor(c(auto$weight, log(auto$weight)), auto$mpg)
cor(data.frame(auto$weight, log(auto$weight)), auto$mpg)
c = data.frame(auto$weight, log(auto$weight)
c = data.frame(auto$weight, log(auto$weight))
c = data.frame(auto$weight, log(auto$weight))
View(c)
cor(data.frame(auto$weight, log(auto$weight), sqrt(auto$weight), (auto$weight)^2), auto$mpg)
cor(data.frame(auto$weight, log(auto$weight), sqrt(auto$weight), (auto$weight)^2), auto$mpg)
cor(data.frame(auto$horsepower, log(auto$horsepower), sqrt(auto$horsepower), (auto$horsepower)^2), auto$mpg)
View(c)
rm(c)
View(auto)
cor(data.frame(auto$weight, log(auto$weight), sqrt(auto$weight), (auto$weight)^2), auto$mpg);
cor(data.frame(auto$horsepower, log(auto$horsepower), sqrt(auto$horsepower), (auto$horsepower)^2), auto$mpg);
cor(data.frame(auto$cylinders, log(auto$cylinders), sqrt(auto$cylinders), (auto$cylinders)^2), auto$mpg);
cor(data.frame(auto$displacement, log(auto$displacement), sqrt(auto$displacement), (auto$displacement)^2), auto$mpg);
cor(data.frame(auto$acceleration, log(auto$acceleration), sqrt(auto$acceleration), (auto$acceleration)^2), auto$mpg);
cor(data.frame(auto$origin, log(auto$origin), sqrt(auto$origin), (auto$origin)^2), auto$mpg);
cor(data.frame(auto$year, log(auto$year), sqrt(auto$year), (auto$year)^2), auto$mpg);
#(e) Fit linear regression models with interaction effects.
temp2 = lm(mpg ~ . - name + horsepower:weight + horsepower:displacement, data = auto);
summary(temp2);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(327),]);
summary(temp);
# Author: Tianyu Li
# Created on Jan 29th 2019
#
# R script for Homework 1 Question 10(Section 3.7, page 122, question 9)
# The Auto.csv file should be in working direction
setwd('Z:/R_working_directory/DS502HW1');
# Read the file
auto = read.csv(file = 'Auto.csv', header = TRUE);
# Remove missing values
auto[auto == '?'] <- NA;
auto$horsepower = as.numeric(as.character(auto$horsepower));
auto = na.omit(auto);
#(a) Produce a scatterplot matrix
pairs(auto);
#(b) Compute the matrix of correlations
cor(auto[, 1:8]);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(327),]);
summary(temp);
# Remove missing values
auto[auto == '?'] <- NA;
auto = na.omit(auto);
auto$horsepower = as.numeric(as.character(auto$horsepower));
#(a) Produce a scatterplot matrix
pairs(auto);
#(b) Compute the matrix of correlations
cor(auto[, 1:8]);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(327),]);
summary(temp);
#(d) Produce diagnostic plots of the linear regression fit
par(mfrow=c(2,2));
plot(temp);
summary(auto)
# Remove missing values
auto[auto == '?'] <- NA;
auto = na.omit(auto);
auto$horsepower = as.numeric(as.character(auto$horsepower));
#(a) Produce a scatterplot matrix
pairs(auto);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(327),]);
#(b) Compute the matrix of correlations
cor(auto[, 1:8]);
summary(temp);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto);
summary(temp);
#(d) Produce diagnostic plots of the linear regression fit
par(mfrow=c(2,2));
plot(temp);
temp = lm(mpg ~ . - name, data[-(14),] = auto);
temp = lm(mpg ~ . - name, data[-(14),] = auto);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data[-c(14),] = auto);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(14),]);
summary(temp);
summary(temp2);
# The plot suggests that the 14th data is a large outlier
temp2 = lm(mpg ~ . - name, data = auto[-(14),]);
summary(temp2);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(14),]);
summary(temp);
auto = na.omit(auto);
auto$horsepower = as.numeric(as.character(auto$horsepower));
auto$horsepower = as.numeric(as.character(auto$horsepower));
auto$horsepower = as.numeric(as.character(auto$horsepower));
# The plot suggests that the 14th data is a large outlier
temp2 = lm(mpg ~ . - name, data = auto[-(14),]);
summary(temp2);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(14),]);
summary(temp);
summary(temp2);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto[-(14),]);
summary(temp);
#(d) Produce diagnostic plots of the linear regression fit
par(mfrow=c(2,2));
plot(temp);
# The plot suggests that the 14th data is a large outlier
temp2 = lm(mpg ~ . - name, data = auto[-(14),]);
summary(temp2);
#(c) Perform a multiple linear regression with mpg
temp = lm(mpg ~ . - name, data = auto);
summary(temp);
#(d) Produce diagnostic plots of the linear regression fit
par(mfrow=c(2,2));
plot(temp);
# The plot suggests that the 14th data is a large outlier
temp2 = lm(mpg ~ . - name, data = auto[-(14),]);
#(e) Fit linear regression models with interaction effects.
temp3 = lm(mpg ~ . - name + horsepower:weight + horsepower:displacement, data = auto);
summary(temp3);
#(f) Try a few different transformations of the variables
cor(data.frame(auto$weight, log(auto$weight), sqrt(auto$weight), (auto$weight)^2), auto$mpg);
cor(data.frame(auto$horsepower, log(auto$horsepower), sqrt(auto$horsepower), (auto$horsepower)^2), auto$mpg);
cor(data.frame(auto$cylinders, log(auto$cylinders), sqrt(auto$cylinders), (auto$cylinders)^2), auto$mpg);
cor(data.frame(auto$displacement, log(auto$displacement), sqrt(auto$displacement), (auto$displacement)^2), auto$mpg);
cor(data.frame(auto$acceleration, log(auto$acceleration), sqrt(auto$acceleration), (auto$acceleration)^2), auto$mpg);
cor(data.frame(auto$origin, log(auto$origin), sqrt(auto$origin), (auto$origin)^2), auto$mpg);
cor(data.frame(auto$year, log(auto$year), sqrt(auto$year), (auto$year)^2), auto$mpg);
#(c) Produce diagnostic plots of the least squares regression fit
par(mfrow = c(2, 2))
plot(temp);
knitr::opts_chunk$set(echo = TRUE)
image: ![](Z:\DS502\HW1\pic.jpg)
image:(Z:\DS502\HW1\pic.jpg)
image![C](Z:\DS502\HW1\pic.jpg)
![C](Z:\DS502\HW1\pic.jpg)
![](pic.jpg)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
summary(cars)
plot(pressure)
summary(cars)
plot(pressure)
summary(cars)
plot(pressure)
unlink('1_cache', recursive = TRUE)
unlink('1_cache', recursive = TRUE)
unlink('1_cache', recursive = TRUE)
knit_with_parameters('Z:/R_working_directory/DS502HW1/1.Rmd')
knit_with_parameters('Z:/R_working_directory/DS502HW1/1.Rmd')
summary(cars)
plot(pressure)
unlink('1_cache', recursive = TRUE)
